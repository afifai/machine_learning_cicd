name: "Model Training"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  train-model-main:
    runs-on: ubuntu-latest
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v3
      - name: "Set up Python"
        run: |
          apt-get update -y
          apt install graphviz -y
          pip install --upgrade pip
      - name: "Install dependencies"
        run: |
          pip install -r requirements.txt
      - name: "Train Model"
        run: |
          python main.py --train
      - name: "Upload evaluation report"
        uses: actions/upload-artifact@v2
        with:
          name: evaluation_report_main
          path: outputs
      - name: "Upload model"
        uses: actions/upload-artifact@v2
        with:
          name: model_main
          path: models
  train-model-experiment:
    if: github.event_name == 'pull_request'
    needs: train-model-main
    runs-on: ubuntu-latest
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v3 
      - name: "Set up Python"
        run: |
          apt-get update -y
          apt install graphviz -y
          pip install --upgrade pip
      - name: "Install dependencies"
        run: |
          pip install -r requirements.txt
      - name: "Download main validation metrics"
        uses: actions/download-artifact@v2
        with:
          name: evaluation_report_main
      - name: "Train Model"
        run: |
          ls -R
          python main.py --train --experiment
      - name: "Upload evaluation report"
        uses: actions/upload-artifact@v2
        with:
          name: evaluation_report_experiment
          path: outputs
      - name: "Upload model"
        uses: actions/upload-artifact@v2
        with:
          name: model_experiment
          path: models
  test-model-main:
    needs: train-model-main
    runs-on: ubuntu-latest
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v3
      - name: "Set up Python"
        run: |
          apt-get update -y
          apt install graphviz -y
          pip install --upgrade pip
      - name: "Install dependencies"
        run: |
          pip install -r requirements.txt
      - name: "Download Model"
        uses: actions/download-artifact@v2
        with:
          name: model_main
      - name: "Test Model"
        run: |
          python main.py --test
      - name: "Upload evaluation report"
        uses: actions/upload-artifact@v2
        with:
          name: test_report_main
          path: outputs
  test-model-experiment:
    needs: [train-model-main,train-model-experiment, test-model-main]
    runs-on: ubuntu-latest
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v3
      - name: "Set up Python"
        run: |
          apt-get update -y
          apt install graphviz -y
          pip install --upgrade pip
      - name: "Install dependencies"
        run: |
          pip install -r requirements.txt
      - name: "Download Model"
        uses: actions/download-artifact@v2
        with:
          name: model_experiment
      - name: "Download main test metrics"
        uses: actions/download-artifact@v2
        with:
          name: evaluation_report_main
      - name: "Test Model"
        run: |
          python main.py --test --experiment
      - name: "Upload evaluation report"
        uses: actions/upload-artifact@v2
        with:
          name: test_report_experiment
          path: outputs
  generate-comment-main:
    if: github.event_name == 'push'
    needs: test-model-main
    runs-on: ubuntu-latest
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: "Download evaluation report"
        uses: actions/download-artifact@v2
        with:
          name: evaluation_report_main
      - name: "Download test report"
        uses: actions/download-artifact@v2
        with:
          name: test_report_main
      - name: "Send CML Report"
        run: |
          echo "## Model Report" > report.md
          echo "### Validation Metrics" >> report.md
          cat evaluation_report_main_validation.txt >> report.md
          echo "\n" >> report.md
          echo "### Testing Metrics" >> report.md
          cat evaluation_report_main_test.txt >> report.md
          echo "\n" >> report.md
          echo "## Model Visualization" >> report.md
          echo "### Model Architecture" >> report.md
          echo "![](./model_architecture_main.png)" >> report.md
          echo "### Accuracy Plot" >> report.md
          echo "![](./accuracy_plot_main.png)" >> report.md
          echo "### Loss Plot" >> report.md
          echo "![](./loss_plot_main.png)" >> report.md
          cml comment create report.md
        env:
          REPO_TOKEN: ${{ secrets.TOKEN }}
  generate-comment-experiment:
    needs: [train-model-main,train-model-experiment, test-model-main, test-model-experiment]
    runs-on: ubuntu-latest
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: "Download evaluation report experiment"
        uses: actions/download-artifact@v2
        with:
          name: evaluation_report_experiment
      - name: "Download test report experiment"
        uses: actions/download-artifact@v2
        with:
          name: test_report_experiment
      - name: "Send CML Report"
        run: |
          echo "## Model Report" > report.md
          echo "### Validation Metrics Comparisson" >> report.md
          cat evaluation_report_experiment_validation.txt >> report.md
          echo "\n" >> report.md
          echo "### Testing Metrics" >> report.md
          cat evaluation_report_experiment_test.txt >> report.md
          echo "\n" >> report.md
          echo "## Model Visualization" >> report.md
          echo "### Model Architecture" >> report.md
          echo "#### Main" >> report.md
          echo "![](./model_architecture_main.png)" >> report.md
          echo "#### Experiment" >> report.md
          echo "![](./model_architecture_experiment.png)" >> report.md
          echo "### Accuracy Plot" >> report.md
          echo "#### Main" >> report.md
          echo "![](./accuracy_plot_main.png)" >> report.md
          echo "#### Experiment" >> report.md
          echo "![](./accuracy_plot_experiment.png)" >> report.md
          echo "### Loss Plot" >> report.md
          echo "#### Main" >> report.md
          echo "![](./loss_plot_main.png)" >> report.md
          echo "#### Experiment" >> report.md
          echo "![](./loss_plot_main.png)" >> report.md
          cml comment create report.md
        env:
          REPO_TOKEN: ${{ secrets.TOKEN }}
